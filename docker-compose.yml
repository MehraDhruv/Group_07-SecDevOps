version: '3'
services:
  # NGINX for generic web service
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./ssl/localhost.key:/etc/ssl/private/localhost.key
    networks:
      - frontend

  # MongoDB service
  mongo:
    container_name: mongo
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  # MongoDB express admin UI
  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
    ports:
      - "8081:8081"
    networks:
      - backend

  # MySQL service for WordPress
  mysql:
    container_name: mysql
    image: mysql:latest
    environment:
      - MYSQL_DATABASE=wordpressdb
      - MYSQL_USER=wordpressuser
      - MYSQL_PASSWORD=secretpassword
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      - backend

  # WordPress service
  wordpress:
    container_name: wordpress
    image: wordpress:latest
    depends_on:
      - mysql
    environment:
      - WORDPRESS_DB_HOST=mysql
      - WORDPRESS_DB_USER=wordpressuser
      - WORDPRESS_DB_PASSWORD=secretpassword
      - WORDPRESS_DB_NAME=wordpressdb
    volumes:
      - wordpressdata:/var/www/html
    networks:
      - backend
      - frontend

  # NGINX as a reverse proxy for WordPress
  proxy:
    container_name: proxy
    image: nginx:latest
    depends_on:
      - wordpress
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl/localhost.crt:/etc/ssl/certs/localhost.crt
      - ./ssl/localhost.key:/etc/ssl/private/localhost.key
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend

networks:
  backend:
  frontend:

volumes:
  mongo-data:
  mysqldata:
  wordpressdata:

